name: Deploy Direct to VPS

on:
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run build test
        run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "🚀 Starting deployment..."
            
            # Navigate to project directory
            cd /opt/torregrossa-portfolio
            
            echo "🔄 Pulling latest code..."
            if [ ! -d ".git" ]; then
              echo "📥 Cloning repository..."
              git clone https://github.com/${{ github.repository }}.git .
            else
              echo "📥 Updating repository..."
              git fetch origin
              git reset --hard origin/master
            fi
            
            echo "📦 Installing dependencies..."
            npm ci
            
            echo "🏗️ Building application..."
            npm run build
            
            echo "🐳 Building Docker image..."
            docker build -t torregrossa-portfolio:latest .
            
            echo "⏹️ Stopping old container..."
            docker stop torregrossa-app 2>/dev/null || true
            docker rm torregrossa-app 2>/dev/null || true
            
            echo "🚀 Starting new container..."
            docker run -d \
              --name torregrossa-app \
              --restart unless-stopped \
              -p 80:80 \
              torregrossa-portfolio:latest
            
            echo "🧹 Cleaning up old images..."
            docker image prune -f --filter "dangling=true"
            
            echo "⏳ Waiting for container to start..."
            sleep 10
            
            echo "🔍 Running health check..."
            for i in {1..5}; do
              if curl -f http://localhost:80 >/dev/null 2>&1; then
                echo "✅ Health check passed!"
                echo "🌐 Site accessible at http://${{ secrets.VPS_HOST }}"
                echo "📍 Your portfolio is now live at http://217.154.120.146"
                exit 0
              else
                echo "⏳ Attempt $i/5 - waiting for container..."
                sleep 5
              fi
            done
            
            echo "❌ Health check failed after 5 attempts!"
            echo "📋 Container logs:"
            docker logs torregrossa-app --tail 50
            echo "📊 Container status:"
            docker ps -a --filter "name=torregrossa-app"
            echo "🔍 System status:"
            docker stats --no-stream torregrossa-app || true
            exit 1

  notify:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Notify deployment status
        run: |
          echo "=== DEPLOYMENT SUMMARY ==="
          echo "Test job: ${{ needs.test.result }}"
          echo "Deploy job: ${{ needs.deploy.result }}"
          
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "✅ Portfolio deployed successfully!"
            echo "🌐 Accessible at: http://217.154.120.146"
            echo "📦 Docker image: torregrossa-portfolio:latest (local)"
            echo ""
            echo "🔗 Next steps:"
            echo "1. Configure DNS: torregrossa.dev → 217.154.120.146"
            echo "2. Setup SSL certificate"
            echo "3. Configure domain redirect"
          else
            echo "❌ Deployment failed! Check the logs above."
            exit 1
          fi