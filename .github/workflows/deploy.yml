name: Deploy Direct to VPS

on:
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run build test
        run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code for deployment
        uses: actions/checkout@v4
        with:
          path: 'source'
          
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "🚀 Starting deployment..."
            
            # Install Node.js if not present
            if ! command -v node &> /dev/null; then
              echo "📦 Installing Node.js..."
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              apt-get install -y nodejs
            fi
            
            # Clean project directory
            echo "🧹 Cleaning project directory..."
            rm -rf /opt/torregrossa-portfolio
            mkdir -p /opt/torregrossa-portfolio
            
      - name: Copy files to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "source/*"
          target: "/opt/torregrossa-portfolio/"
          strip_components: 1
          
      - name: Build and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /opt/torregrossa-portfolio
            
            echo "📁 Checking files..."
            ls -la
            
            if [ ! -f "package.json" ]; then
              echo "❌ package.json not found!"
              echo "Files in directory:"
              find . -type f -name "*.json" -o -name "*.js" -o -name "*.ts" | head -20
              exit 1
            fi
            
            echo "📦 Installing dependencies..."
            npm install --production=false
            
            echo "🏗️ Building application..."
            npm run build
            
            # Check if build was successful
            if [ ! -d "out" ]; then
              echo "❌ Build failed - no 'out' directory found"
              echo "Available directories:"
              ls -la
              exit 1
            fi
            
            echo "🐳 Building Docker image..."
            docker build -t torregrossa-portfolio:latest .
            
            echo "⏹️ Stopping old container..."
            docker stop torregrossa-app 2>/dev/null || true
            docker rm torregrossa-app 2>/dev/null || true
            
            echo "🚀 Starting new container..."
            docker run -d \
              --name torregrossa-app \
              --restart unless-stopped \
              -p 80:80 \
              torregrossa-portfolio:latest
            
            echo "🧹 Cleaning up old images..."
            docker image prune -f --filter "dangling=true"
            
            echo "⏳ Waiting for container to start..."
            sleep 15
            
            echo "🔍 Running health check..."
            for i in {1..10}; do
              if curl -f http://localhost:80 >/dev/null 2>&1; then
                echo "✅ Health check passed!"
                echo "🌐 Site accessible at http://${{ secrets.VPS_HOST }}"
                echo "📍 Your portfolio is now live at http://217.154.120.146"
                
                # Show container status for confirmation
                docker ps --filter "name=torregrossa-app"
                exit 0
              else
                echo "⏳ Attempt $i/10 - waiting for container..."
                sleep 3
              fi
            done
            
            echo "❌ Health check failed after 10 attempts!"
            echo "📋 Container logs:"
            docker logs torregrossa-app --tail 50 2>/dev/null || echo "No container logs available"
            echo "📊 Container status:"
            docker ps -a --filter "name=torregrossa-app"
            echo "🔍 Docker images:"
            docker images | grep torregrossa || echo "No torregrossa images found"
            exit 1

  notify:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Notify deployment status
        run: |
          echo "=== DEPLOYMENT SUMMARY ==="
          echo "Test job: ${{ needs.test.result }}"
          echo "Deploy job: ${{ needs.deploy.result }}"
          
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "✅ Portfolio deployed successfully!"
            echo "🌐 Accessible at: http://217.154.120.146"
            echo "📦 Docker image: torregrossa-portfolio:latest (local)"
            echo ""
            echo "🔗 Next steps:"
            echo "1. Configure DNS: torregrossa.dev → 217.154.120.146"
            echo "2. Setup SSL certificate"
            echo "3. Configure domain redirect"
          else
            echo "❌ Deployment failed! Check the logs above."
            exit 1
          fi